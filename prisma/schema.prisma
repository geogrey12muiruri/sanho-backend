// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          String   @id @default(cuid())
  name        String   @unique
  slug        String   @unique
  description String?
  parentId    String?
  isActive    Boolean  @default(true)
  sortOrder   Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  parent   Category?  @relation("CategoryHierarchy", fields: [parentId], references: [id])
  children Category[] @relation("CategoryHierarchy")
  parts    Part[]

  @@map("categories")
}

model Manufacturer {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  website     String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  parts         Part[]
  machineModels MachineModel[]

  @@map("manufacturers")
}

model MachineModel {
  id            String   @id @default(cuid())
  name          String
  manufacturerId String
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations
  manufacturer  Manufacturer @relation(fields: [manufacturerId], references: [id])
  compatibilities PartCompatibility[]

  @@unique([name, manufacturerId])
  @@map("machine_models")
}

model Part {
  id              String   @id @default(cuid())
  partNumber      String   @unique
  oemNumber       String?
  title           String
  description     String?
  shortDescription String?
  price           Decimal?
  externalLink    String?
  images          String[]
  tags            String[]
  isActive        Boolean  @default(true)
  isFeatured      Boolean  @default(false)
  sortOrder       Int      @default(0)
  categoryId      String
  manufacturerId  String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Relations
  category       Category           @relation(fields: [categoryId], references: [id])
  manufacturer   Manufacturer?      @relation(fields: [manufacturerId], references: [id])
  compatibilities PartCompatibility[]

  @@map("parts")
}

model PartCompatibility {
  id            String      @id @default(cuid())
  partId        String
  machineModelId String
  createdAt     DateTime    @default(now())

  // Relations
  part         Part        @relation(fields: [partId], references: [id], onDelete: Cascade)
  machineModel MachineModel @relation(fields: [machineModelId], references: [id], onDelete: Cascade)

  @@unique([partId, machineModelId])
  @@map("part_compatibilities")
}
